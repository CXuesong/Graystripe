{"version":3,"sources":["script/utility.ts"],"names":[],"mappings":";;;;;;;;;;;;;IAcA,iBAAwB,GAAW;QAC/B,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAA,IAAI;YAC3B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC,EAAE,UAAC,GAAG,EAAE,MAAM,EAAE,GAAG;YAChB,MAAM,CAAC,IAAI,QAAQ,CAAC,GAAG,IAAI,MAAM,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACP,CAAC;;IAED,oBAA2B,MAAc;QACrC,MAAM,CAAC,MAAM;aACR,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC;aACtB,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC;aACrB,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC;aACrB,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC;aACvB,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACjC,CAAC;;IAGD;QACI,IAAI,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAC3B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxC,IAAI,WAAW,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;YACtC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,CAAC;QACD,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;;;;;;YArCD;gBAA8B,4BAAK;gBAC/B,kBAAmC,MAAc,EAAkB,GAAY;oBAA/E,YACI,kBAAM,qCAAkC,GAAG,YAAM,MAAM,MAAG,CAAC,SAC9D;oBAFkC,YAAM,GAAN,MAAM,CAAQ;oBAAkB,SAAG,GAAH,GAAG,CAAS;;gBAE/E,CAAC;gBACL,eAAC;YAAD,CAJA,AAIC,CAJ6B,KAAK,GAIlC;;YAED;gBAA0C,wCAAK;gBAC3C,8BAAmC,UAAe,EAAkB,YAAoB;oBAAxF,YACI,kBAAM,+BAA6B,YAAY,YAAM,UAAU,QAAI,CAAC,SACvE;oBAFkC,gBAAU,GAAV,UAAU,CAAK;oBAAkB,kBAAY,GAAZ,YAAY,CAAQ;;gBAExF,CAAC;gBACL,2BAAC;YAAD,CAJA,AAIC,CAJyC,KAAK,GAI9C;;QA4BD,CAAC","file":"utility.js","sourcesContent":["/// <reference path=\"../../typings/index.d.ts\"/>\r\n\r\nexport class NetError extends Error {\r\n    public constructor(public readonly status: string, public readonly url?: string) {\r\n        super(`Network error when requesting \"${url}\": ${status}.`);\r\n    }\r\n}\r\n\r\nexport class ResourceMissingError extends Error {\r\n    public constructor(public readonly resourceId: any, public readonly resourceType: string) {\r\n        super(`Cannot find the specified ${resourceType}: \"${resourceId}\".`);\r\n    }\r\n}\r\n\r\nexport function getJson(url: string) {\r\n    return $.getJSON(url).then(data => {\r\n        return data;\r\n    }, (xhr, status, err) => {\r\n        return new NetError(err || status, xhr.responseURL);\r\n    });\r\n}\r\n\r\nexport function htmlEscape(unsafe: string) {\r\n    return unsafe\r\n        .replace(/&/g, \"&amp;\")\r\n        .replace(/</g, \"&lt;\")\r\n        .replace(/>/g, \"&gt;\")\r\n        .replace(/\"/g, \"&quot;\")\r\n        .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function formatString(format: string, ...args: any[]): string;\r\nexport function formatString() {\r\n    let content = arguments[0];\r\n    for (let i = 1; i < arguments.length; i++) {\r\n        let replacement = \"{\" + (i - 1) + \"}\";\r\n        content = content.replace(replacement, arguments[i]);\r\n    }\r\n    return content;\r\n}\r\n"]}