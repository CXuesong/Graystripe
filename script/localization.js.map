{"version":3,"sources":["script/localization.ts"],"names":[],"mappings":"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","file":"localization.js","sourcesContent":["/// <reference path=\"../../typings/index.d.ts\"/>\r\nimport * as Utility from \"./utility\";\r\nimport * as Locale from \"./locale\";\r\n\r\n/**\r\n * localization/catalog.json Root.\r\n */\r\ninterface LocalizationCatalog {\r\n    /**\r\n     * Known languages.\r\n     */\r\n    languages: string[];\r\n    fallbacks: { [source: string]: string };\r\n}\r\n\r\ntype TextDict = { [key: string]: string | Array<string> };\r\n\r\nexport class LocalizedResourceProvider implements Locale.LocaleAware {\r\n\r\n    public static readonly LocalizedResourcePath = \"data/localization\";\r\n    public static readonly FallbackLanguage = \"en\";\r\n\r\n    private loadedDicts: { [locale: string]: TextDict } = {};\r\n    private observables: { [key: string]: KnockoutObservable<string> } = {};\r\n    private _currentLocale: string;\r\n    private _catalog: LocalizationCatalog;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public initializeAsync(initialLocale: string) {\r\n        return Utility.getJson(LocalizedResourceProvider.LocalizedResourcePath + \"/catalog.json\").then(\r\n            (data: LocalizationCatalog) => {\r\n                this._catalog = data;\r\n                if (initialLocale)\r\n                    return this.setCurrentLocaleAsync(initialLocale);\r\n                return $.Deferred().resolve();\r\n            });\r\n    }\r\n\r\n    public getCurrentLocale() {\r\n        return this._currentLocale;\r\n    }\r\n\r\n    public setCurrentLocaleAsync(value: string) {\r\n        console.assert(!!this._catalog);\r\n        value = Locale.normalizeLanguageTag(value || \"\");\r\n        while (value && this._catalog.languages.indexOf(value) < 0) {\r\n            let fb = Locale.getSurrogateLanguage(value) || Locale.fallbackLanguageTag(value);\r\n        }\r\n        if (!value) {\r\n            console.assert(this._catalog.languages.indexOf(LocalizedResourceProvider.FallbackLanguage) >= 0);\r\n            value = LocalizedResourceProvider.FallbackLanguage;\r\n        }\r\n        this._currentLocale = value;\r\n        if (!(value in this.loadedDicts)) {\r\n            this.loadedDicts[value] = null;\r\n            return this.fetchResourceDictAsync(value).then(((dict: TextDict) => {\r\n                // console.log(dict, \"Loaded resource dictionary for \", value);\r\n                this.loadedDicts[value] = dict;\r\n                if (this._currentLocale === value)\r\n                    this.refreshObservables();\r\n                return {};\r\n            }));\r\n        }\r\n        return $.Deferred().resolve();\r\n    }\r\n\r\n    public getString(key: string, ...args: any[]): string;\r\n    public getString(key: string): string;\r\n    public getString() {\r\n        let dict = this.loadedDicts[this._currentLocale];\r\n        if (!dict) return null;\r\n        let value = dict[arguments[0]];\r\n        if (!value) return undefined;\r\n        if (value instanceof Array) value = value.join(\"\");\r\n        if (arguments.length > 1) {\r\n            let para = <any[]>Array.apply(null, arguments);\r\n            para[0] = value;\r\n            value = Utility.formatString.apply(null, para);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    public getObservableString(key: string) {\r\n        let v = this.observables[key];\r\n        if (v) return v;\r\n        let lv = this.getString(key);\r\n        v = ko.observable(lv || `[${key}]`);\r\n        this.observables[key] = v;\r\n        return v;\r\n    }\r\n\r\n    public refreshObservables() {\r\n        for (let key in this.observables) {\r\n            if (this.observables.hasOwnProperty(key)) {\r\n                let lv = this.getString(key);\r\n                // console.debug(key, lv);\r\n                if (lv) this.observables[key](lv);\r\n            }\r\n        }\r\n    }\r\n\r\n    private fetchResourceDictAsync(locale: string) {\r\n        console.assert(!!locale);\r\n        return Utility.getJson(`${LocalizedResourceProvider.LocalizedResourcePath}/${locale}/text.json`);\r\n    }\r\n\r\n    public get supportedLocales() {\r\n        return this._catalog.languages;\r\n    }\r\n}\r\n\r\n/**\r\n * Public instance of LocalizedResourceProvider.\r\n */\r\nexport let LR = new LocalizedResourceProvider();\r\n"]}